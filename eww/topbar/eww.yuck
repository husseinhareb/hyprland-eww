;;
;; ** Widgets config for EWW
;; ** Created by : @adi1090x
;; **

;; ** Variables ***********************************************************************

;; Workspace vars
(defpoll WMS :interval "1s" `wmctrl -d | grep '*' | cut -d ' ' -f13`)

;; Time vars
(defpoll TIME :interval "5s" `date +\"%I:%M %p\"`)
(defpoll DATE :interval "5s" `date +\"%A, %B %d\"`)

;; Weather vars
(defpoll WEATHER :interval "5m" `scripts/weather.sh`)
;; Music vars
(defpoll SONG :interval "1s" `scripts/spotify/spotify-song.sh`)
(defpoll ARTIST :interval "1s" `scripts/spotify/spotify-artist.sh`)
(defpoll COVER :interval "1s" `scripts/spotify/spotify-artwork.sh`)
(defpoll STATUS :interval "1s" `scripts/spotify/spotify-status.sh`)

;; Mail vars
(defpoll MAILS :interval "5m" `scripts/mails`)

;; Battery vars
(defpoll BATICON :interval "1s" `scripts/battery.sh --icon`)
(defpoll BATPERC :interval "10s" `scripts/battery.sh --perc`)
;; Screen 
(defpoll BRIGHTNESS :interval "1s" `scripts/brightness.sh level`)
(defpoll BRIGHTICON :interval "1s" `scripts/brightness.sh icon`)
;; Audio vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)
(defpoll MICROPHONE :interval "1s" "scripts/mic.sh")
(defpoll MICICON :interval "1s" "scripts/micicon.sh")
;; Network
(defpoll WIFIICON :interval "10s" `scripts/check-network --icon`)
(defpoll NETSTAT :interval "10s" `scripts/check-network --stat`)

;; User
(defvar IMAGE "images/profile.jpeg")
(defpoll USER :interval "10m" `whoami`)
(defvar OPTIONS "images/options.png")

;; ** Widgets *************************************************************************


;; weather
(defwidget weather [] 
		(box :class "dockbox"
			(box :class "clockbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "time" :halign "start" :wrap "true" :limit-width 25 :text TIME)
				(label :class "date" :halign "start" :wrap "true" :limit-width 25 :text DATE))
			(box :class "weatherbox" :orientation "h" :spacing 0 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
				(label :class "weathertemp" :text WEATHER))))

;; apps
(defwidget apps [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 15 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/apps/vlc.png');" :class "appicon" :onclick "scripts/apps --vlc")
				(button :style "background-image: url('images/icons/apps/files.png');" :class "appicon" :onclick "scripts/apps --thunar")
				(button :style "background-image: url('images/icons/apps/discord.png');" :class "appicon" :onclick "scripts/apps --discord")
				(button :style "background-image: url('images/icons/apps/spotify.png');" :class "appicon" :onclick "scripts/apps --spotify")
				(button :style "background-image: url('images/icons/apps/visual-studio-code.png');" :class "appicon" :onclick "scripts/apps --vscode")
				(button :style "background-image: url('images/icons/apps/terminal.png');" :class "appicon" :onclick "scripts/apps --kitty")
				(button :style "background-image: url('images/icons/apps/firefox.png');" :class "appicon" :onclick "scripts/apps --firefox"))))

;; music
(defwidget music [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
				(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
				(box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false"
					(label :class "song" :halign "start" :wrap "false" :limit-width 30 :text SONG)
					(label :class "artist" :halign "start" :wrap "false" :limit-width 20 :text ARTIST)))
			(box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :style "background-image: url('images/icons/music/previous-button.png');" :class "trackbutton" :onclick "scripts/spotify/spotify-previous.sh")
				(button :style "background-image: url('${STATUS}');" :class "playbutton" :onclick "scripts/spotify/spotify-pause.sh")
				(button :style "background-image: url('images/icons/music/next-button.png');" :class "trackbutton" :onclick "scripts/spotify/spotify-next.sh"))))


;; audio
(defwidget audio [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"

				(button :onclick "scripts/volume --toggle"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${VOLICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text VOLUME)))
				(button :onclick "scripts/mictoggle.sh"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${MICICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text MICROPHONE))))))

;; screen
(defwidget screen [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"

				(button :onclick "scripts/volume --toggle"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${BRIGHTICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text "${BRIGHTNESS}%")))
				(button :onclick "scripts/widget_apps --pow"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${BATICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text BATPERC))))))


;; profile
(defwidget profile [] 
		(box :class "dockbox"
			(box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				(button :onclick "scripts/widget_apps --nm"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${WIFIICON}');" :class "trayicon")
							(label :class "infotext" :halign "start" :text NETSTAT)))
				(button :onclick "sidedar/toggle_sidebar"
					(box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
						(box :style "background-image: url('${IMAGE}');" :class "face")
							(label :class "infotext" :halign "start" :text USER))))))



;; more
(defwidget more [] 
		(box :class "dockbox"
        	(button :onclick "/home/shtam/.config/eww/dashboard/launch_dashboard"
			    (box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
								(box :style "background-image: url('${OPTIONS}');" :class "face")))))

;; ** Windows *************************************************************************

;; weather
(defwindow weather
           :monitor 0
           :geometry (geometry :x "5px"
                               :y "5px"
                               :width "300px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(weather))

;; music
(defwindow music
           :monitor 0
           :geometry (geometry :x "310px"
                               :y "5px"
                               :width "400px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(music))


;; apps
(defwindow apps
           :monitor 0
           :geometry (geometry :x "760px"
                               :y "5px"
                               :width "400px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(apps))







;;audio
(defwindow audio
			:monitor 0
			:geometry (geometry :x "1246px"
								:y "5px"
								:width "170px"
								:height "45px"
								:anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(audio))



;;screen
(defwindow screen
           :monitor 0
           :geometry (geometry :x "1421px"
                               :y "5px"
                               :width "210px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(screen))

;; profile
(defwindow profile
           :monitor 0
           :geometry (geometry :x "1636px"
                               :y "5px"
                               :width "230px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(profile))

;;more
(defwindow more
           :monitor 0
           :geometry (geometry :x "1871px"
                               :y "5px"
                               :width "44px"
                               :height "45px"
                               :anchor "top left")
           :stacking "fg"
           :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
(more))